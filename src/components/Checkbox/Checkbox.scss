@use 'sass:string';
@use '../../global/styles/_color-variables' as colors;
@use '../../global/styles/_cust-prop-helpers' as *;

label {
	--checkbox-side: .8em;

	display: inline-grid;
	grid-template-columns: calc(#{prop(--checkbox-side)} + (2 * #{prop(--standard-border-width)})) auto;
	grid-template-rows: auto;
	grid-template-areas: 'box label';
	grid-gap: .5em;
	max-width: 100%;
	user-select: none;

	&::before {
		color: prop(--color-1);
		content: '';
		border: prop(--standard-border);
		grid-area: box;
	}

	slot {
		grid-area: label;
	}

}

input[type="checkbox"] {
	opacity: 0;
	position: absolute;

	&:checked+label::after {
		$check-color: '%23#{string.slice(#{colors.$color-1}, 2)}';
		$check-svg: 'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g data-name="Layer 2"><g data-name="checkmark" stroke="#{$check-color}" fill="#{$check-color}"><rect width="24" height="24" opacity="0"/><path d="M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z"/></g></g></svg>';

		content: '';
		grid-area: box;
		background: url($check-svg), prop(--color-4);
		background-position: center;
		background-size: cover;
	}

	&:focus+label::before {
		outline: prop(--color-3) solid calc(#{prop(--standard-border-width)} * 1.5);
	}

}